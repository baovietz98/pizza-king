require('dotenv').config();
const mongoose = require('mongoose');
const { cleanupGuestCarts, cleanupInactiveGuestCarts, getGuestCartStats } = require('./src/utils/cartCleanup');

// K·∫øt n·ªëi database
mongoose.connect(process.env.MONGO_URI);

async function runCleanup() {
  try {
    console.log('üßπ B·∫Øt ƒë·∫ßu cleanup guest carts...\n');
    
    // Hi·ªÉn th·ªã th·ªëng k√™ tr∆∞·ªõc khi cleanup
    const statsBefore = await getGuestCartStats();
    console.log('üìä Th·ªëng k√™ tr∆∞·ªõc cleanup:');
    console.log(`   - T·ªïng guest carts: ${statsBefore.total}`);
    console.log(`   - Cart r·ªóng: ${statsBefore.empty}`);
    console.log(`   - Cart c≈© (>7 ng√†y): ${statsBefore.old}\n`);
    
    // Cleanup carts c≈© (7 ng√†y)
    const deletedOld = await cleanupGuestCarts(7, false);
    
    // Cleanup carts kh√¥ng ho·∫°t ƒë·ªông (3 ng√†y kh√¥ng update)
    const deletedInactive = await cleanupInactiveGuestCarts();
    
    // Hi·ªÉn th·ªã th·ªëng k√™ sau khi cleanup
    const statsAfter = await getGuestCartStats();
    console.log('\nüìä Th·ªëng k√™ sau cleanup:');
    console.log(`   - T·ªïng guest carts: ${statsAfter.total}`);
    console.log(`   - Cart r·ªóng: ${statsAfter.empty}`);
    console.log(`   - Cart c≈© (>7 ng√†y): ${statsAfter.old}`);
    
    console.log(`\n‚úÖ Ho√†n th√†nh! ƒê√£ x√≥a ${deletedOld + deletedInactive} guest carts`);
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  } finally {
    mongoose.connection.close();
  }
}

// Ch·∫°y cleanup
runCleanup(); 